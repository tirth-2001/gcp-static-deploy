# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: GCP CI-CD with steps

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      # install dependencies
      - name: Install dependencies
        run: yarn
      # build app
      - name: build
        run: yarn build
      # Upload build artifcats to temporary bucket
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build

  setup-gcp:
    runs-on: ubuntu-latest

    needs: [build]

    steps:
      - name: Setup GCP
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT }}
          export_default_credentials: true

  download-artifact:
    runs-on: ubuntu-latest

    needs: [build]

    steps:
      # Download build artifcats from temporary bucket
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: build/latest

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: build/latest

  deploy:
    runs-on: ubuntu-latest

    needs: [build, setup-gcp, download-artifact]

    env:
      GCP_BUCKET: ${{ secrets.GCP_BUCKET }}

    steps:
      # Upload build artifcats to GCP bucket
      - name: Upload to Bucket
        run: gsutil -m rsync -d -c -r build/latest gs://$GCP_BUCKET/build
      - name: Sync to GCP working directory
        run: gsutil rsync -r gs://react-gcp-ci-cd ./react-ci-cd
      - name: Deploy
        run: cd react-ci-cd && gcloud app deploy
